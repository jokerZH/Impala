From fcb8c7f912e57e8fe366c7783cb6c2804786b4cc Mon Sep 17 00:00:00 2001
From: Andrew Purtell <apurtell@apache.org>
Date: Tue, 1 Nov 2016 19:09:17 -0700
Subject: [PATCH 440/471] HBASE-16980 TestRowProcessorEndpoint failing
 consistently (Yu Li)

(cherry picked from commit 8b7053fb392b621f62bfe2c4d47a7d03945d44bd)

Change-Id: I3e0dc8939ad73ba489f4e2e61e59ea43c095c486
Author: Andrew Purtell
Reason: Bug
Ref: CDH-47213
---
 .../coprocessor/TestRowProcessorEndpoint.java      |   23 +++++++++++++++-----
 1 file changed, 18 insertions(+), 5 deletions(-)

diff --git a/hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRowProcessorEndpoint.java b/hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRowProcessorEndpoint.java
index d511734..62b6306 100644
--- a/hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRowProcessorEndpoint.java
+++ b/hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRowProcessorEndpoint.java
@@ -181,8 +181,11 @@ public class TestRowProcessorEndpoint {
     Get get = new Get(ROW);
     LOG.debug("row keyvalues:" + stringifyKvs(table.get(get).listCells()));
     int finalCounter = incrementCounter(table);
-    assertEquals(numThreads + 1, finalCounter);
-    assertEquals(0, failures.get());
+    int failureNumber = failures.get();
+    if (failureNumber > 0) {
+      LOG.debug("We failed " + failureNumber + " times during test");
+    }
+    assertEquals(numThreads + 1 - failureNumber, finalCounter);
   }
 
   class IncrementRunner implements Runnable {
@@ -191,6 +194,7 @@ public class TestRowProcessorEndpoint {
       try {
         incrementCounter(table);
       } catch (Throwable e) {
+        failures.incrementAndGet();
         e.printStackTrace();
       }
     }
@@ -243,9 +247,17 @@ public class TestRowProcessorEndpoint {
               stringifyKvs(table.get(new Get(ROW)).listCells()));
     LOG.debug("row2 keyvalues:" +
               stringifyKvs(table.get(new Get(ROW2)).listCells()));
-    assertEquals(rowSize, table.get(new Get(ROW)).listCells().size());
-    assertEquals(row2Size, table.get(new Get(ROW2)).listCells().size());
-    assertEquals(0, failures.get());
+    int failureNumber = failures.get();
+    if (failureNumber > 0) {
+      LOG.debug("We failed " + failureNumber + " times during test");
+    }
+    if (!swapped) {
+      assertEquals(rowSize, table.get(new Get(ROW)).listCells().size());
+      assertEquals(row2Size, table.get(new Get(ROW2)).listCells().size());
+    } else {
+      assertEquals(rowSize, table.get(new Get(ROW2)).listCells().size());
+      assertEquals(row2Size, table.get(new Get(ROW)).listCells().size());
+    }
   }
 
   class SwapRowsRunner implements Runnable {
@@ -254,6 +266,7 @@ public class TestRowProcessorEndpoint {
       try {
         swapRows(table);
       } catch (Throwable e) {
+        failures.incrementAndGet();
         e.printStackTrace();
       }
     }
-- 
1.7.9.5

